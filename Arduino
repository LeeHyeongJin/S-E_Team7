 //// Bluetooth ////
#include<SoftwareSerial.h>
SoftwareSerial BT(4,5);

 //// IR ////
#include <IRremote.h>
IRsend irsend;

//int RECV_PIN = 11;
//IRrecv irrecv(RECV_PIN);
//decode_results results;

 //// DHT ////
#include "DHT.h"         
#define DHTPIN 7        //  S Pin Number
#define DHTTYPE DHT11   //  DHT11 or DHT22
DHT dht(DHTPIN, DHTTYPE);


void setup() {

  Serial.begin(9600);
  
  BT.begin(9600);
 
  dht.begin();
  
  //irrecv.enableIRIn();
  
}
/*
void dump(decode_results *results) {
  // Dumps out the decode_results structure.
  // Call this after IRrecv::decode()
  int count = results->rawlen;
  if (results->decode_type == UNKNOWN) {
    Serial.print("Unknown encoding: ");
  }
  else if (results->decode_type == NEC) {
    Serial.print("Decoded NEC: ");

  }
  else if (results->decode_type == SONY) {
    Serial.print("Decoded SONY: ");
  }
  else if (results->decode_type == RC5) {
    Serial.print("Decoded RC5: ");
  }
  else if (results->decode_type == RC6) {
    Serial.print("Decoded RC6: ");
  }
  else if (results->decode_type == PANASONIC) {
    Serial.print("Decoded PANASONIC - Address: ");
    Serial.print(results->address, HEX);
    Serial.print(" Value: ");
  }
  else if (results->decode_type == LG) {
    Serial.print("Decoded LG: ");
  }
  else if (results->decode_type == JVC) {
    Serial.print("Decoded JVC: ");
  }
  else if (results->decode_type == AIWA_RC_T501) {
    Serial.print("Decoded AIWA RC T501: ");
  }
  else if (results->decode_type == WHYNTER) {
    Serial.print("Decoded Whynter: ");
  }
  Serial.print(results->value, HEX);
  Serial.print(" (");
  Serial.print(results->bits, DEC);
  Serial.println(" bits)");
  Serial.print("Raw (");
  Serial.print(count, DEC);
  Serial.print("): ");

  for (int i = 1; i < count; i++) {
    if (i & 1) {
      Serial.print(results->rawbuf[i]*USECPERTICK, DEC);
    }
    else {
      Serial.write('-');
      Serial.print((unsigned long) results->rawbuf[i]*USECPERTICK, DEC);
    }
    Serial.print(" ");
  }
  Serial.println();
}
*/

void loop() {
  
////////////BT/////////////////
  if(BT.available())
    Serial.write(BT.read());

  if(Serial.available())
    BT.write(Serial.read());
    
////////////DHT////////////////   
  float h = dht.readHumidity();
  float t = dht.readTemperature();
 
  if (isnan(t) || isnan(h)) {
    //값 읽기 실패시 시리얼 모니터 출력
    Serial.println("Failed to read from DHT");
  } else {
    //온도, 습도 표시 시리얼 모니터 출력
    Serial.print("Humidity: "); 
    Serial.print(h);
    Serial.print(" %\t");
    Serial.print("Temperature: "); 
    Serial.print(t);
    Serial.println(" *C");
  }
  delay(1000);
  
  
////////////IRSEND//////////////////
  int khz = 38;
  if(t >= 28)
  {
    irsend.sendLG(0x8800347,28);
    delay(2000);
  }
  
  else if(t<26)
  {
    irsend.sendLG(0x88C0051,28);
    delay(2000);
  }
  
//////////IRReceive///////////////
  /*
  if (irrecv.decode(&results)) {
   // Serial.println(results.value, HEX);
   // dump(&results);
   //irrecv.resume();
   }
   */
}



